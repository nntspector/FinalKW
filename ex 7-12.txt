#7 В подключенном MySQL репозитории создать базу данных "Друзья человека":
CREATE DATABASE IF NOT EXISTS Друзья_человека;
USE Друзья_человека;

#8  таблицы с иерархией из диаграммы в БД:

CREATE TABLE IF NOT EXISTS Родительский_класс (
    ID INT PRIMARY KEY,
    Имя VARCHAR(50),
    Команда VARCHAR(50),
    Дата_рождения DATE
);

CREATE TABLE IF NOT EXISTS Домашние_животные (
    ID INT PRIMARY KEY,
    Имя VARCHAR(50),
    Команда VARCHAR(50),
    Дата_рождения DATE,
    FOREIGN KEY (ID) REFERENCES Родительский_класс (ID)
);

CREATE TABLE IF NOT EXISTS Вьючные_животные (
    ID INT PRIMARY KEY,
    Имя VARCHAR(50),
    Команда VARCHAR(50),
    Дата_рождения DATE,
    FOREIGN KEY (ID) REFERENCES Родительский_класс (ID)
);

CREATE TABLE IF NOT EXISTS Собаки (
    ID INT PRIMARY KEY,
    Порода VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES Домашние_животные (ID)
);

CREATE TABLE IF NOT EXISTS Кошки (
    ID INT PRIMARY KEY,
    Цвет VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES Домашние_животные (ID)
);

CREATE TABLE IF NOT EXISTS Хомяки (
    ID INT PRIMARY KEY,
    Количество_кормлений INT,
    FOREIGN KEY (ID) REFERENCES Домашние_животные (ID)
);

CREATE TABLE IF NOT EXISTS Лошади (
    ID INT PRIMARY KEY,
    Окрас VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES Вьючные_животные (ID)
);

CREATE TABLE IF NOT EXISTS Верблюды (
    ID INT PRIMARY KEY,
    Грузоподъемность DECIMAL(5,2),
    FOREIGN KEY (ID) REFERENCES Вьючные_животные (ID)
);

CREATE TABLE IF NOT EXISTS Ослы (
    ID INT PRIMARY KEY,
    Грузоподъемность DECIMAL(5,2),
    FOREIGN KEY (ID) REFERENCES Вьючные_животные (ID)
);

+ тоже самое для других таких же таблиц

#9 Заполнить низкоуровневые таблицы именами(животных), командами, которые они выполняют и датами рождения:

- Добавляем записи в родительскую таблицу
INSERT INTO Родительский_класс (ID, Имя, Команда, Дата_рождения) VALUES
    (1, 'Животное1', 'Команда1', '2020-01-01'),
    (2, 'Животное2', 'Команда2', '2019-02-15');

- Добавляем записи в таблицу домашних животных
INSERT INTO Домашние_животные (ID, Имя, Команда, Дата_рождения) VALUES
    (2, 'Собака1', 'Сидеть', '2018-03-20'),
    (3, 'Кошка1', 'Ловить мышей', '2019-05-10'),
    (4, 'Хомяк1', 'Крутить беговое колесо', '2020-07-05');

- Добавляем записи в таблицу вьючных животных
INSERT INTO Вьючные_животные (ID, Имя, Команда, Дата_рождения) VALUES
    (5, 'Лошадь1', 'Тянуть плуг', '2017-12-12'),
    (6, 'Верблюд1', 'Перевозить грузы', '2018-10-25'),
    (7, 'Осел1', 'Перевозить грузы', '2019-01-08');

- Добавляем записи в таблицу собак
INSERT INTO Собаки (ID, Порода) VALUES
    (2, 'Такса'),
    (8, 'Овчарка');

- Добавляем записи в таблицу кошек
INSERT INTO Кошки (ID, Цвет) VALUES
    (3, 'Рыжий'),
    (9, 'Черный');

- Добавляем записи в таблицу хомяков
INSERT INTO Хомяки (ID, Количество_кормлений) VALUES
    (4, 3),
    (10, 2);

- Добавляем записи в таблицу лошадей
INSERT INTO Лошади (ID, Окрас) VALUES
    (5, 'Белая'),
    (11, 'Коричневая');

- Добавляем записи в таблицу верблюдов
INSERT INTO Верблюды (ID, Грузоподъемность) VALUES
    (6, 300.50),
    (12, 250.75);

- Добавляем записи в таблицу ослов
INSERT INTO Ослы (ID, Грузоподъемность) VALUES
    (7, 200.30),
    (13, 180.90);

#10 Удалив из таблицы верблюдов, объединить таблицы лошади и ослы в одну таблицу:

DELETE FROM Верблюды WHERE ID = [id_верблюда];
-- Операция объединения таблиц выполнится при следующем запросе
INSERT INTO Вьючные_животные (ID, Имя, Команда, Дата_рождения) SELECT ID, Имя, Команда, Дата_рождения FROM Лошади;
INSERT INTO Вьючные_животные (ID, Имя, Команда, Дата_рождения) SELECT ID, Имя, Команда, Дата_рождения FROM Ослы;

#11 Создать новую таблицу "молодые животные":

CREATE TABLE IF NOT EXISTS Молодые_животные AS
SELECT * FROM Родительский_класс
WHERE DATEDIFF(CURDATE(), Дата_рождения) BETWEEN 365 AND 1095;

#12 Объединить все таблицы в одну:
CREATE TABLE IF NOT EXISTS Все_животные AS
SELECT * FROM Родительский_класс
UNION ALL
SELECT * FROM Домашние_животные
UNION ALL
+ Добавить остальные аналогичные таблицы


